syntax = "proto3";

/* 注意事项:
 * package 和 option 是固定的，不可更改
 * service、rpc方法、message、enum的命名须符合PascalCase规范
 * service名称必须以Service结尾
 * 入参的message必须以Request结果
 * 出参的message必须以Response结尾，切前2个字段必须是return_code和return_msg
 * message的字段命名须符合lower_snake_case
 * 枚举项全部大写，且至少有一个，枚举序号必须从0开始
 * 字段常用的基础数据类型:double、float、int32、int64、bool、string、bytes
 * 一旦将文件提交至大仓，不得再对service名、rpc方法名、message名以及字段名、字段类型、字段序号进行修改
 */

package autohome.rpc.car.app_cars.v1.carext;
option java_multiple_files = true;
option java_outer_classname = "SeriesTabProto";
option java_package = "autohome.rpc.car.app_cars.v1.carext";
option go_package = "git.corpautohome.com/microservice/go-genproto/autohome/rpc/car/app_cars/v1/carext;carext";
option csharp_namespace = "autohome.rpc.car.app_cars.v1.carext";
import "autohome/rpc/car/app_cars/v1/carbase/common.proto";
import "autohome/rpc/car/app_cars/v1/common/koubei_card.proto";
import "autohome/rpc/car/app_cars/v1/common/news_card.proto";
import "autohome/rpc/car/app_cars/v1/common/club_card.proto";
import "autohome/rpc/car/app_cars/v1/common/playcar_card.proto";
import "autohome/rpc/car/app_cars/v1/common/usecar_card.proto";
import "autohome/rpc/car/app_cars/v1/common/usedcar_card.proto";
import "autohome/rpc/car/app_cars/v1/common/samelevel_card.proto";
import "autohome/rpc/car/app_cars/v1/common/hotcomment_card.proto";
import "autohome/rpc/car/app_cars/v1/common/aiviewpoint_card.proto";
/**
  * 车系tab接口
  * 生产环境 - 主机: car_app_cars.grpc.corpautohome.com
  * 预发环境 - 主机: car_app_cars.thallo.corpautohome.com
  * 测试环境 - 主机: car_app_cars.terra.corpautohome.com
 */
service SeriesTabService {
  /**
    * 车系tab接口
    */
  rpc getTabCard (SeriesTabRequest) returns (SeriesTabResponse) {}
}

message SeriesTabRequest {
  //车系id
  int32 seriesid = 1 ;

  //1 ios,2 android
  int32 pm = 2 ;

  int32 cityid = 3 ;

  //插件版本
  string pluginversion = 4 ;

  //tabid
  int32 tabid = 5 ;

  int32 from = 6;

  int32 specid = 7;

  double longitude = 8;

  double latitude = 9;

  string deviceid = 10;

  //用车实验
  string usecarab = 11;

  string authorization = 12;

  //车系热评AI观点实验-101509
  string aiviewpointab = 13;

  // 新版车系页实验参数-101775
  string newsummaryab = 14;
  string price = 15;
  // 二手车筛选无限流页码
  int32 pageindex = 16;
  // 二手车筛选页码
  int32 pagesize = 17;
  // 二手车筛选排序方式
  int32 sort = 18;
  // 二手车筛选里程
  string mileage = 19;
  // 二手车筛选车龄
  string age = 20;
  // 更多二手车入口实验
  string usedcarrecab = 21;
  //车系选购视频实验（值是实验中的自定义参数）
  string articlexuangouab = 22;
  //玩车tab逻辑实验
  string playcartab = 23;
  //车系资讯tab体验优化实验
  string seriesarticledatafromab = 24;
}

message SeriesTabResponse{
  int32 return_code = 1 [json_name = "returncode"];
  string return_msg = 2 [json_name = "message"];
  Result result = 3;

  message Result{
    string subtitle = 1;
    string tabbgurl = 2;
    string tabname = 3;
    Bottombtn bottombtn = 4;
    repeated Subtablist subtablist = 5;
    repeated Summary summary = 6;
    Toprightbtn toprightbtn = 7;
    repeated CardData list = 8;
    PvData pvdata = 9;
    int32 modules = 10;
    int32 subtabselectid = 11;
    RefitInfo refitinfo = 12;
    repeated ButtonBtnItem buttonbtnlist = 13;
    repeated string righticonlist = 14;
    string tabnameicon = 15;
    int32 totalcount = 16;
    int32 pageindex = 17;
    int32 pagecount = 18;
    repeated UsedCarFilter filter = 19;

    message CardData{
      int32 id = 1;
      int32 type = 2;
      string datafield = 3;
      oneof data{
        common.KouBeiCard card_koubei = 4 [json_name = "data"]; //口碑卡片
        common.NewsCard card_news = 5[json_name = "data"]; //口碑卡片
        common.ClubCard club_data = 6[json_name = "data"]; //论坛卡片
        common.PlayCarCard play_car = 7[json_name = "data"]; //玩车卡片
        common.UseCarCard use_car = 8[json_name = "data"]; //用车卡片
        common.UsedCarCard used_car = 9[json_name = "data"]; //二手车卡片
        common.SameLevelCard same_level = 10[json_name = "data"]; //同级车卡片
        common.HotCommentCard hot_comment = 11[json_name = "data"]; //同级车卡片
        common.AiViewPointCard ai_viewpoint = 12[json_name = "data"]; //AI观点卡片
      }
    }


    message Summary{
      int32 volume = 1;
      int32 tabid = 2;
      int32 summarykey = 3;
      int32 sentimentkey = 4;
      bool iselectronic = 5;
      string combination = 6;
    }

    message Toprightbtn{
      string btnurl = 1;
      string text = 2;
      string pvareaid = 3;
    }

    message Bottombtn{
      string btnurl = 1;
      string text = 2;
      carbase.Pvitem pvitem = 3;
      string pvareaid = 4;
    }

    message Subtablist{
      int32 tabid = 1;
      string name = 2;
      string linkurl = 3;
    }

    message PvData{
      repeated PvItemKV requestpvargs = 1;
    }

    message PvItemKV{
      string argkey = 1;
      string argvalue = 2;
    }

    message RefitInfo {

      message Normal {
        uint32 seq = 1;
        string url = 2;
      }

      message Preview {
        uint32 seq = 1;
        string url = 2;
      }

      message Hori {
        repeated Normal normal = 1;
        repeated Preview preview = 2;
      }

      string bgimg = 1;
      Hori hori = 2;
      uint32 id = 3;
      string linkurl = 4;
      uint32 seriesid = 5;
      string seriesname = 6;
    }

    message ButtonBtnItem {
      string guidetext = 1;
      string scheme = 2;
      string text = 3;
      uint32 type = 4;
      repeated string animateiconlist = 5;
      carbase.Pvitem pvitem = 6;
    }

    message UsedCarFilterItem {
      string name = 1;
      uint32 selected = 2;
      string typeid = 3;
      string value = 4;
    }

    message UsedCarFilter {
      repeated UsedCarFilterItem list = 1;
      string name = 2;
      string parameter = 3;
      carbase.Pvitem pvitem = 4;
      carbase.Pvitem submitpvitem = 5;
    }

  }
}
